name: Approved actions operations

on:
  workflow_dispatch:
    inputs:
      operation:
        description: "Operation to perform. ex: update, add"
        required: true
        type: string
      action:
        description: "Single action to add. ex: actions/checkout"
        required: false
        type: string
      artifact:
        description: "Artifact reference (JIRA ticket, business reason, etc) for the new action."
        required: false
        type: string
  schedule:
    - cron: "0 0 * * 1"

jobs:
  actions-operation:
    name: "Approved actions operations"
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    env:
      _ACTION: ${{ inputs.action }}
      _ARTIFACT: ${{ inputs.artifact }}
    steps:
      - name: Check for action input
        if: ${{ inputs.operation == 'add' }}
        run: |
          if [ -z "$_ACTION" ]; then
            echo "Action input is required for operation 'add'"
            exit 1
          fi

          action_no_spaces=$(echo "$_ACTION" | tr -d ' ')
          if [ "$_ACTION" != "$action_no_spaces" ]; then
            echo "Action input must not contain spaces: '$_ACTION'"
            exit 1
          fi

          owner=$(echo "$_ACTION" | cut -d'/' -f1)
          repository=$(echo "$_ACTION" | cut -d'/' -f2)
          slash_count=$(echo "$_ACTION" | awk -F'/' '{print NF-1}')
          if [ "$slash_count" -ne 1 ] || [ -z "$owner" ] || [ -z "$repository" ]; then
            echo "Action input must be in the format 'owner/repo': $_ACTION"
            exit 1
          fi

      - name: Check for artifact reference
        if: ${{ inputs.operation == 'add' && !env._ARTIFACT }}
        run: echo "Artifact reference is required for operation 'add'" && exit 1

      - name: Log in to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: "bitwarden-ci"
          secrets: "github-gpg-private-key,
            github-gpg-private-key-passphrase"

      - name: Get Azure Key Vault secrets
        id: get-kv-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: gh-org-bitwarden
          secrets: "BW-GHAPP-ID,BW-GHAPP-KEY"

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main

      - name: Checkout Branch
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
        with:
          gpg_private_key: ${{ steps.retrieve-secrets.outputs.github-gpg-private-key }}
          passphrase: ${{ steps.retrieve-secrets.outputs.github-gpg-private-key-passphrase }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Setup git
        run: |
          git config --local user.email "106330231+bitwarden-devops-bot@users.noreply.github.com"
          git config --local user.name "bitwarden-devops-bot"

      - name: Set up Python 3.12
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13.7"

      - name: Install bwwl binary
        run: python -m pip install --upgrade bitwarden_workflow_linter

      - name: Create Branch
        if: ${{ github.event_name == 'schedule' || inputs.operation == 'update' }}
        run: |
          NAME="update-actions-$(date +'%Y%m%d-%H%M%S')"
          git switch -c $NAME
          echo "BRANCH_NAME=$NAME" >> $GITHUB_ENV

      - name: Create Branch
        if: ${{ inputs.operation == 'add' }}
        run: |
          # Sanitize _ACTION to allow only alphanumerics, hyphens, and underscores
          SAFE_ACTION=$(echo "$_ACTION" | tr -c 'A-Za-z0-9_-.' '-' | tr '/' '-')
          NAME="add-action-$SAFE_ACTION"
          git switch -c "$NAME"
          echo "BRANCH_NAME=$NAME" >> $GITHUB_ENV

      - name: Run bwwl update
        if: ${{ github.event_name == 'schedule' || inputs.operation == 'update' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Avoid rate limiting
        run: bwwl actions update -o src/bitwarden_workflow_linter/default_actions.json

      - name: Run bwwl add
        if: ${{ inputs.operation == 'add' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Avoid rate limiting
        run: bwwl actions add -o src/bitwarden_workflow_linter/default_actions.json "$_ACTION"

      - name: Check for changes to commit
        id: new-changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "new_changes=TRUE" >> $GITHUB_OUTPUT
          else
            echo "new_changes=FALSE" >> $GITHUB_OUTPUT
            echo "No changes to commit!"
          fi

      - name: Commit changes
        if: ${{ steps.new-changes.outputs.new_changes == 'TRUE' }}
        run: |
          git commit -m "Update approved actions" -a
          git push origin "${{ env.BRANCH_NAME }}"

      - name: Generate GH App token
        if: ${{ steps.new-changes.outputs.new_changes == 'TRUE' }}
        uses: actions/create-github-app-token@d72941d797fd3113feb6b93fd0dec494b13a2547 # v1.12.0
        id: app-token
        with:
          app-id: ${{ steps.get-kv-secrets.outputs.BW-GHAPP-ID }}
          private-key: ${{ steps.get-kv-secrets.outputs.BW-GHAPP-KEY }}

      - name: Create PR
        if: ${{ steps.new-changes.outputs.new_changes == 'TRUE' }}
        id: create-pr
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          TITLE: "Update/Add bwwl approved actions${{ inputs.operation == 'add' && env._ACTION != '' && format(' for {0}', env._ACTION) || '' }}"
          ARTIFACT: "${{ inputs.operation == 'add' && format('\n    ## Artifact Reference\n    {0}\n', env._ARTIFACT) || '' }}"
        run: |
          PR_URL=$(gh pr create --title "$TITLE" \
            --base "main" \
            --head "${{ env.BRANCH_NAME }}" \
            --label "version:patch" \
            --label "automated pr" \
            --body "
              ## Type of change
              - [ ] Bug fix
              - [ ] New feature development
              - [X] Tech debt (refactoring, code cleanup, dependency upgrades, etc)
              - [ ] Build/deploy pipeline (DevOps)
              - [ ] Other

              ## Initiated by
              ${{ github.actor }}
              $ARTIFACT
              ## Description
              - This PR updates the approved actions for the Bitwarden Workflow Linter.")
          echo "### PR created: $PR_URL" >> $GITHUB_STEP_SUMMARY
